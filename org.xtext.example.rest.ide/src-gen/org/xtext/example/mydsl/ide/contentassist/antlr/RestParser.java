/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.HashMap;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalRestParser;
import org.xtext.example.mydsl.services.RestGrammarAccess;

public class RestParser extends AbstractContentAssistParser {

	@Inject
	private RestGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalRestParser createParser() {
		InternalRestParser result = new InternalRestParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getAssertResponseAccess().getAlternatives_2(), "rule__AssertResponse__Alternatives_2");
					put(grammarAccess.getAssertResponseAccess().getAlternatives_2_0_1(), "rule__AssertResponse__Alternatives_2_0_1");
					put(grammarAccess.getComparacionAccess().getAlternatives_5(), "rule__Comparacion__Alternatives_5");
					put(grammarAccess.getComparadorAccess().getAlternatives(), "rule__Comparador__Alternatives");
					put(grammarAccess.getMapAccess().getAlternatives_8(), "rule__Map__Alternatives_8");
					put(grammarAccess.getMetodoAccess().getAlternatives(), "rule__Metodo__Alternatives");
					put(grammarAccess.getURLAccess().getAlternatives_2(), "rule__URL__Alternatives_2");
					put(grammarAccess.getEntidadAccess().getAlternatives(), "rule__Entidad__Alternatives");
					put(grammarAccess.getMockAccess().getAlternatives_2(), "rule__Mock__Alternatives_2");
					put(grammarAccess.getTipoMockAccess().getAlternatives(), "rule__TipoMock__Alternatives");
					put(grammarAccess.getTipoElementoAccess().getAlternatives(), "rule__TipoElemento__Alternatives");
					put(grammarAccess.getTipoBasicoAccess().getNameAlternatives_1_0(), "rule__TipoBasico__NameAlternatives_1_0");
					put(grammarAccess.getModelAccess().getGroup(), "rule__Model__Group__0");
					put(grammarAccess.getTestAccess().getGroup(), "rule__Test__Group__0");
					put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
					put(grammarAccess.getAssertResponseAccess().getGroup(), "rule__AssertResponse__Group__0");
					put(grammarAccess.getAssertResponseAccess().getGroup_2_0(), "rule__AssertResponse__Group_2_0__0");
					put(grammarAccess.getAssertResponseAccess().getGroup_2_1(), "rule__AssertResponse__Group_2_1__0");
					put(grammarAccess.getComparacionAccess().getGroup(), "rule__Comparacion__Group__0");
					put(grammarAccess.getComparacionAccess().getGroup_5_2(), "rule__Comparacion__Group_5_2__0");
					put(grammarAccess.getMappingAccess().getGroup(), "rule__Mapping__Group__0");
					put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
					put(grammarAccess.getMapAccess().getGroup_8_2(), "rule__Map__Group_8_2__0");
					put(grammarAccess.getMapNameAccess().getGroup(), "rule__MapName__Group__0");
					put(grammarAccess.getDELETEAccess().getGroup(), "rule__DELETE__Group__0");
					put(grammarAccess.getPOSTAccess().getGroup(), "rule__POST__Group__0");
					put(grammarAccess.getPUTAccess().getGroup(), "rule__PUT__Group__0");
					put(grammarAccess.getGETAccess().getGroup(), "rule__GET__Group__0");
					put(grammarAccess.getResponseAccess().getGroup(), "rule__Response__Group__0");
					put(grammarAccess.getRequestAccess().getGroup(), "rule__Request__Group__0");
					put(grammarAccess.getURLAccess().getGroup(), "rule__URL__Group__0");
					put(grammarAccess.getURLAccess().getGroup_3(), "rule__URL__Group_3__0");
					put(grammarAccess.getPathNameAccess().getGroup(), "rule__PathName__Group__0");
					put(grammarAccess.getPathParamAccess().getGroup(), "rule__PathParam__Group__0");
					put(grammarAccess.getQueryParamAccess().getGroup(), "rule__QueryParam__Group__0");
					put(grammarAccess.getEntidadMockAccess().getGroup(), "rule__EntidadMock__Group__0");
					put(grammarAccess.getEntidadSimpleAccess().getGroup(), "rule__EntidadSimple__Group__0");
					put(grammarAccess.getAtributoAccess().getGroup(), "rule__Atributo__Group__0");
					put(grammarAccess.getMockAccess().getGroup(), "rule__Mock__Group__0");
					put(grammarAccess.getMockAccess().getGroup_2_0(), "rule__Mock__Group_2_0__0");
					put(grammarAccess.getMockAccess().getGroup_2_0_1(), "rule__Mock__Group_2_0_1__0");
					put(grammarAccess.getMockTypeAccess().getGroup(), "rule__MockType__Group__0");
					put(grammarAccess.getTipoEntidadAccess().getGroup(), "rule__TipoEntidad__Group__0");
					put(grammarAccess.getTipoBasicoAccess().getGroup(), "rule__TipoBasico__Group__0");
					put(grammarAccess.getModelAccess().getEntidadesAssignment_4(), "rule__Model__EntidadesAssignment_4");
					put(grammarAccess.getModelAccess().getMetodosAssignment_5(), "rule__Model__MetodosAssignment_5");
					put(grammarAccess.getModelAccess().getTestsAssignment_6(), "rule__Model__TestsAssignment_6");
					put(grammarAccess.getTestAccess().getNameAssignment_2(), "rule__Test__NameAssignment_2");
					put(grammarAccess.getTestAccess().getServiceAssignment_6(), "rule__Test__ServiceAssignment_6");
					put(grammarAccess.getTestAccess().getMappingAssignment_12(), "rule__Test__MappingAssignment_12");
					put(grammarAccess.getTestAccess().getAssertionAssignment_13(), "rule__Test__AssertionAssignment_13");
					put(grammarAccess.getAssertionAccess().getAssertResponseAssignment_7(), "rule__Assertion__AssertResponseAssignment_7");
					put(grammarAccess.getAssertResponseAccess().getComparacionAssignment_2_1_1(), "rule__AssertResponse__ComparacionAssignment_2_1_1");
					put(grammarAccess.getComparacionAccess().getEntidadAssignment_1(), "rule__Comparacion__EntidadAssignment_1");
					put(grammarAccess.getComparacionAccess().getAtributoAssignment_3(), "rule__Comparacion__AtributoAssignment_3");
					put(grammarAccess.getComparacionAccess().getMetodoAssignment_5_2_1(), "rule__Comparacion__MetodoAssignment_5_2_1");
					put(grammarAccess.getComparacionAccess().getParamAssignment_5_2_3(), "rule__Comparacion__ParamAssignment_5_2_3");
					put(grammarAccess.getMappingAccess().getMapsAssignment_3(), "rule__Mapping__MapsAssignment_3");
					put(grammarAccess.getMapAccess().getNameAssignment_4(), "rule__Map__NameAssignment_4");
					put(grammarAccess.getMapAccess().getEntidadMapAssignment_8_2_2(), "rule__Map__EntidadMapAssignment_8_2_2");
					put(grammarAccess.getMapAccess().getAtributoAssignment_8_2_4(), "rule__Map__AtributoAssignment_8_2_4");
					put(grammarAccess.getMapNameAccess().getMetodoAssignment_1(), "rule__MapName__MetodoAssignment_1");
					put(grammarAccess.getMapNameAccess().getParamAssignment_3(), "rule__MapName__ParamAssignment_3");
					put(grammarAccess.getDELETEAccess().getNameAssignment_2(), "rule__DELETE__NameAssignment_2");
					put(grammarAccess.getDELETEAccess().getPathAssignment_6(), "rule__DELETE__PathAssignment_6");
					put(grammarAccess.getDELETEAccess().getResponseAssignment_8(), "rule__DELETE__ResponseAssignment_8");
					put(grammarAccess.getPOSTAccess().getNameAssignment_2(), "rule__POST__NameAssignment_2");
					put(grammarAccess.getPOSTAccess().getPathAssignment_6(), "rule__POST__PathAssignment_6");
					put(grammarAccess.getPOSTAccess().getRequestAssignment_8(), "rule__POST__RequestAssignment_8");
					put(grammarAccess.getPOSTAccess().getResponseAssignment_9(), "rule__POST__ResponseAssignment_9");
					put(grammarAccess.getPUTAccess().getNameAssignment_2(), "rule__PUT__NameAssignment_2");
					put(grammarAccess.getPUTAccess().getPathAssignment_6(), "rule__PUT__PathAssignment_6");
					put(grammarAccess.getPUTAccess().getRequestAssignment_8(), "rule__PUT__RequestAssignment_8");
					put(grammarAccess.getPUTAccess().getResponseAssignment_9(), "rule__PUT__ResponseAssignment_9");
					put(grammarAccess.getGETAccess().getNameAssignment_2(), "rule__GET__NameAssignment_2");
					put(grammarAccess.getGETAccess().getPathAssignment_6(), "rule__GET__PathAssignment_6");
					put(grammarAccess.getGETAccess().getResponseAssignment_8(), "rule__GET__ResponseAssignment_8");
					put(grammarAccess.getResponseAccess().getTipoResponseAssignment_5(), "rule__Response__TipoResponseAssignment_5");
					put(grammarAccess.getResponseAccess().getArrayAssignment_6(), "rule__Response__ArrayAssignment_6");
					put(grammarAccess.getRequestAccess().getTipoResponseAssignment_5(), "rule__Request__TipoResponseAssignment_5");
					put(grammarAccess.getRequestAccess().getArrayAssignment_6(), "rule__Request__ArrayAssignment_6");
					put(grammarAccess.getURLAccess().getPathparamAssignment_2_1(), "rule__URL__PathparamAssignment_2_1");
					put(grammarAccess.getURLAccess().getQueryparamAssignment_3_1(), "rule__URL__QueryparamAssignment_3_1");
					put(grammarAccess.getPathParamAccess().getNameAssignment_2(), "rule__PathParam__NameAssignment_2");
					put(grammarAccess.getQueryParamAccess().getNameAssignment_2(), "rule__QueryParam__NameAssignment_2");
					put(grammarAccess.getEntidadMockAccess().getNameAssignment_2(), "rule__EntidadMock__NameAssignment_2");
					put(grammarAccess.getEntidadMockAccess().getAtributosAssignment_4(), "rule__EntidadMock__AtributosAssignment_4");
					put(grammarAccess.getEntidadSimpleAccess().getNameAssignment_2(), "rule__EntidadSimple__NameAssignment_2");
					put(grammarAccess.getEntidadSimpleAccess().getAtributosAssignment_4(), "rule__EntidadSimple__AtributosAssignment_4");
					put(grammarAccess.getAtributoAccess().getTipoAssignment_1(), "rule__Atributo__TipoAssignment_1");
					put(grammarAccess.getAtributoAccess().getArrayAssignment_2(), "rule__Atributo__ArrayAssignment_2");
					put(grammarAccess.getAtributoAccess().getNameAssignment_3(), "rule__Atributo__NameAssignment_3");
					put(grammarAccess.getAtributoAccess().getMocktypeAssignment_4(), "rule__Atributo__MocktypeAssignment_4");
					put(grammarAccess.getMockAccess().getPkAssignment_2_0_0(), "rule__Mock__PkAssignment_2_0_0");
					put(grammarAccess.getTipoEntidadAccess().getEntidadAssignment_1(), "rule__TipoEntidad__EntidadAssignment_1");
					put(grammarAccess.getTipoBasicoAccess().getNameAssignment_1(), "rule__TipoBasico__NameAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
			
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public RestGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(RestGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
