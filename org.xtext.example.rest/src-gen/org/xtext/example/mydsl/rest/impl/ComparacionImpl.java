/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.rest.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.rest.Atributo;
import org.xtext.example.mydsl.rest.Comparacion;
import org.xtext.example.mydsl.rest.Entidad;
import org.xtext.example.mydsl.rest.Metodo;
import org.xtext.example.mydsl.rest.PathParam;
import org.xtext.example.mydsl.rest.RestPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Comparacion</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.ComparacionImpl#getEntidad <em>Entidad</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.ComparacionImpl#getAtributo <em>Atributo</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.ComparacionImpl#getMetodo <em>Metodo</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.ComparacionImpl#getParam <em>Param</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ComparacionImpl extends MinimalEObjectImpl.Container implements Comparacion
{
  /**
   * The cached value of the '{@link #getEntidad() <em>Entidad</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntidad()
   * @generated
   * @ordered
   */
  protected Entidad entidad;

  /**
   * The cached value of the '{@link #getAtributo() <em>Atributo</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtributo()
   * @generated
   * @ordered
   */
  protected Atributo atributo;

  /**
   * The cached value of the '{@link #getMetodo() <em>Metodo</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMetodo()
   * @generated
   * @ordered
   */
  protected Metodo metodo;

  /**
   * The cached value of the '{@link #getParam() <em>Param</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParam()
   * @generated
   * @ordered
   */
  protected PathParam param;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ComparacionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestPackage.Literals.COMPARACION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entidad getEntidad()
  {
    if (entidad != null && entidad.eIsProxy())
    {
      InternalEObject oldEntidad = (InternalEObject)entidad;
      entidad = (Entidad)eResolveProxy(oldEntidad);
      if (entidad != oldEntidad)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.COMPARACION__ENTIDAD, oldEntidad, entidad));
      }
    }
    return entidad;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entidad basicGetEntidad()
  {
    return entidad;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntidad(Entidad newEntidad)
  {
    Entidad oldEntidad = entidad;
    entidad = newEntidad;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.COMPARACION__ENTIDAD, oldEntidad, entidad));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Atributo getAtributo()
  {
    if (atributo != null && atributo.eIsProxy())
    {
      InternalEObject oldAtributo = (InternalEObject)atributo;
      atributo = (Atributo)eResolveProxy(oldAtributo);
      if (atributo != oldAtributo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.COMPARACION__ATRIBUTO, oldAtributo, atributo));
      }
    }
    return atributo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Atributo basicGetAtributo()
  {
    return atributo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAtributo(Atributo newAtributo)
  {
    Atributo oldAtributo = atributo;
    atributo = newAtributo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.COMPARACION__ATRIBUTO, oldAtributo, atributo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Metodo getMetodo()
  {
    if (metodo != null && metodo.eIsProxy())
    {
      InternalEObject oldMetodo = (InternalEObject)metodo;
      metodo = (Metodo)eResolveProxy(oldMetodo);
      if (metodo != oldMetodo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.COMPARACION__METODO, oldMetodo, metodo));
      }
    }
    return metodo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Metodo basicGetMetodo()
  {
    return metodo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setMetodo(Metodo newMetodo)
  {
    Metodo oldMetodo = metodo;
    metodo = newMetodo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.COMPARACION__METODO, oldMetodo, metodo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PathParam getParam()
  {
    if (param != null && param.eIsProxy())
    {
      InternalEObject oldParam = (InternalEObject)param;
      param = (PathParam)eResolveProxy(oldParam);
      if (param != oldParam)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.COMPARACION__PARAM, oldParam, param));
      }
    }
    return param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PathParam basicGetParam()
  {
    return param;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setParam(PathParam newParam)
  {
    PathParam oldParam = param;
    param = newParam;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.COMPARACION__PARAM, oldParam, param));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestPackage.COMPARACION__ENTIDAD:
        if (resolve) return getEntidad();
        return basicGetEntidad();
      case RestPackage.COMPARACION__ATRIBUTO:
        if (resolve) return getAtributo();
        return basicGetAtributo();
      case RestPackage.COMPARACION__METODO:
        if (resolve) return getMetodo();
        return basicGetMetodo();
      case RestPackage.COMPARACION__PARAM:
        if (resolve) return getParam();
        return basicGetParam();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestPackage.COMPARACION__ENTIDAD:
        setEntidad((Entidad)newValue);
        return;
      case RestPackage.COMPARACION__ATRIBUTO:
        setAtributo((Atributo)newValue);
        return;
      case RestPackage.COMPARACION__METODO:
        setMetodo((Metodo)newValue);
        return;
      case RestPackage.COMPARACION__PARAM:
        setParam((PathParam)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.COMPARACION__ENTIDAD:
        setEntidad((Entidad)null);
        return;
      case RestPackage.COMPARACION__ATRIBUTO:
        setAtributo((Atributo)null);
        return;
      case RestPackage.COMPARACION__METODO:
        setMetodo((Metodo)null);
        return;
      case RestPackage.COMPARACION__PARAM:
        setParam((PathParam)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.COMPARACION__ENTIDAD:
        return entidad != null;
      case RestPackage.COMPARACION__ATRIBUTO:
        return atributo != null;
      case RestPackage.COMPARACION__METODO:
        return metodo != null;
      case RestPackage.COMPARACION__PARAM:
        return param != null;
    }
    return super.eIsSet(featureID);
  }

} //ComparacionImpl
