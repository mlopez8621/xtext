/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.rest.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.rest.Atributo;
import org.xtext.example.mydsl.rest.Entidad;
import org.xtext.example.mydsl.rest.Map;
import org.xtext.example.mydsl.rest.MapName;
import org.xtext.example.mydsl.rest.RestPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Map</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.MapImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.MapImpl#getEntidadMap <em>Entidad Map</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.MapImpl#getAtributo <em>Atributo</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MapImpl extends MinimalEObjectImpl.Container implements Map
{
  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected MapName name;

  /**
   * The cached value of the '{@link #getEntidadMap() <em>Entidad Map</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEntidadMap()
   * @generated
   * @ordered
   */
  protected Entidad entidadMap;

  /**
   * The cached value of the '{@link #getAtributo() <em>Atributo</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAtributo()
   * @generated
   * @ordered
   */
  protected Atributo atributo;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MapImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestPackage.Literals.MAP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MapName getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetName(MapName newName, NotificationChain msgs)
  {
    MapName oldName = name;
    name = newName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RestPackage.MAP__NAME, oldName, newName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(MapName newName)
  {
    if (newName != name)
    {
      NotificationChain msgs = null;
      if (name != null)
        msgs = ((InternalEObject)name).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RestPackage.MAP__NAME, null, msgs);
      if (newName != null)
        msgs = ((InternalEObject)newName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RestPackage.MAP__NAME, null, msgs);
      msgs = basicSetName(newName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.MAP__NAME, newName, newName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entidad getEntidadMap()
  {
    if (entidadMap != null && entidadMap.eIsProxy())
    {
      InternalEObject oldEntidadMap = (InternalEObject)entidadMap;
      entidadMap = (Entidad)eResolveProxy(oldEntidadMap);
      if (entidadMap != oldEntidadMap)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.MAP__ENTIDAD_MAP, oldEntidadMap, entidadMap));
      }
    }
    return entidadMap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Entidad basicGetEntidadMap()
  {
    return entidadMap;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEntidadMap(Entidad newEntidadMap)
  {
    Entidad oldEntidadMap = entidadMap;
    entidadMap = newEntidadMap;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.MAP__ENTIDAD_MAP, oldEntidadMap, entidadMap));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Atributo getAtributo()
  {
    if (atributo != null && atributo.eIsProxy())
    {
      InternalEObject oldAtributo = (InternalEObject)atributo;
      atributo = (Atributo)eResolveProxy(oldAtributo);
      if (atributo != oldAtributo)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, RestPackage.MAP__ATRIBUTO, oldAtributo, atributo));
      }
    }
    return atributo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Atributo basicGetAtributo()
  {
    return atributo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAtributo(Atributo newAtributo)
  {
    Atributo oldAtributo = atributo;
    atributo = newAtributo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.MAP__ATRIBUTO, oldAtributo, atributo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RestPackage.MAP__NAME:
        return basicSetName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestPackage.MAP__NAME:
        return getName();
      case RestPackage.MAP__ENTIDAD_MAP:
        if (resolve) return getEntidadMap();
        return basicGetEntidadMap();
      case RestPackage.MAP__ATRIBUTO:
        if (resolve) return getAtributo();
        return basicGetAtributo();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestPackage.MAP__NAME:
        setName((MapName)newValue);
        return;
      case RestPackage.MAP__ENTIDAD_MAP:
        setEntidadMap((Entidad)newValue);
        return;
      case RestPackage.MAP__ATRIBUTO:
        setAtributo((Atributo)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.MAP__NAME:
        setName((MapName)null);
        return;
      case RestPackage.MAP__ENTIDAD_MAP:
        setEntidadMap((Entidad)null);
        return;
      case RestPackage.MAP__ATRIBUTO:
        setAtributo((Atributo)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.MAP__NAME:
        return name != null;
      case RestPackage.MAP__ENTIDAD_MAP:
        return entidadMap != null;
      case RestPackage.MAP__ATRIBUTO:
        return atributo != null;
    }
    return super.eIsSet(featureID);
  }

} //MapImpl
