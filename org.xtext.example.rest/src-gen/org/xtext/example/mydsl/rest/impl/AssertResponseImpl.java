/**
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.rest.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.rest.AssertResponse;
import org.xtext.example.mydsl.rest.Comparacion;
import org.xtext.example.mydsl.rest.RestPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Assert Response</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.rest.impl.AssertResponseImpl#getComparacion <em>Comparacion</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AssertResponseImpl extends MinimalEObjectImpl.Container implements AssertResponse
{
  /**
   * The cached value of the '{@link #getComparacion() <em>Comparacion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getComparacion()
   * @generated
   * @ordered
   */
  protected Comparacion comparacion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AssertResponseImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return RestPackage.Literals.ASSERT_RESPONSE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparacion getComparacion()
  {
    return comparacion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetComparacion(Comparacion newComparacion, NotificationChain msgs)
  {
    Comparacion oldComparacion = comparacion;
    comparacion = newComparacion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, RestPackage.ASSERT_RESPONSE__COMPARACION, oldComparacion, newComparacion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setComparacion(Comparacion newComparacion)
  {
    if (newComparacion != comparacion)
    {
      NotificationChain msgs = null;
      if (comparacion != null)
        msgs = ((InternalEObject)comparacion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - RestPackage.ASSERT_RESPONSE__COMPARACION, null, msgs);
      if (newComparacion != null)
        msgs = ((InternalEObject)newComparacion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - RestPackage.ASSERT_RESPONSE__COMPARACION, null, msgs);
      msgs = basicSetComparacion(newComparacion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, RestPackage.ASSERT_RESPONSE__COMPARACION, newComparacion, newComparacion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case RestPackage.ASSERT_RESPONSE__COMPARACION:
        return basicSetComparacion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case RestPackage.ASSERT_RESPONSE__COMPARACION:
        return getComparacion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case RestPackage.ASSERT_RESPONSE__COMPARACION:
        setComparacion((Comparacion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.ASSERT_RESPONSE__COMPARACION:
        setComparacion((Comparacion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case RestPackage.ASSERT_RESPONSE__COMPARACION:
        return comparacion != null;
    }
    return super.eIsSet(featureID);
  }

} //AssertResponseImpl
